{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\WebProject\\\\react-nodebird\\\\components\\\\CommentForm.js\";\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport { useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onChangeCommentText] = useInput('');\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (addCommentDone) {\n      setText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatchEvent({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId,\n        id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/WebProject/react-nodebird/components/CommentForm.js"],"names":["Form","Input","Button","React","useCallback","useEffect","PropTypes","useInput","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","addCommentDone","setText","onSubmitComment","console","log","dispatchEvent","type","data","content","postId","userId","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;AAAA,SAAQA,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC5B,QAAMC,EAAE,GAAGJ,WAAW,CAAEK,KAAD;AAAA;;AAAA,6BAASA,KAAK,CAACC,IAAN,CAAWC,EAApB,mDAAS,eAAeH,EAAxB;AAAA,GAAD,CAAtB;AACA,QAAM,CAACI,WAAD,EAAcC,mBAAd,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAACW,IAAAA;AAAD,MAAmBV,WAAW,CAAEK,KAAD,IAAUA,KAAK,CAACF,IAAjB,CAApC;AAEAN,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGa,cAAH,EAAkB;AAChBC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GAJQ,EAIP,CAACD,cAAD,CAJO,CAAT;AAMA,QAAME,eAAe,GAAGhB,WAAW,CAAC,MAAI;AACpCiB,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACC,EAAjB,EAAqBI,WAArB;AACAO,IAAAA,aAAa,CAAC;AACVC,MAAAA,IAAI,EAAEf,mBADI;AAEVgB,MAAAA,IAAI,EAAE;AAACC,QAAAA,OAAO,EAAEV,WAAV;AAAuBW,QAAAA,MAAM,EAAChB,IAAI,CAACC,EAAnC;AAAuCgB,QAAAA,MAAvC;AAA+ChB,QAAAA;AAA/C;AAFI,KAAD,CAAb;AAIH,GANkC,EAMjC,CAACI,WAAD,EAAaJ,EAAb,CANiC,CAAnC;AAOA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,eAAhB;AAAA,2BACC,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAACS,QAAAA,QAAQ,EAAC,UAAV;AAAsBC,QAAAA,MAAM,EAAC;AAA7B,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEd,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACY,UAAAA,QAAQ,EAAC,UAAV;AAAsBE,UAAAA,KAAK,EAAC,CAA5B;AAA+BC,UAAAA,MAAM,EAAC,CAAC;AAAvC,SAAf;AAA2D,QAAA,IAAI,EAAC,SAAhE;AAA0E,QAAA,QAAQ,EAAC,QAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA3BD;;AA6BAtB,WAAW,CAACuB,SAAZ,GAAuB;AACrBtB,EAAAA,IAAI,EAAEL,SAAS,CAAC4B,MAAV,CAAiBC;AADF,CAAvB;AAIA,eAAezB,WAAf","sourcesContent":["import {Form, Input, Button} from 'antd';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useInput from '../hooks/useInput';\r\nimport { useSelector } from 'react-redux';\r\nimport {ADD_COMMENT_REQUEST} from '../reducers/post';\r\n\r\n\r\nconst CommentForm = ({post}) => {\r\n    const id = useSelector((state)=>state.user.me?.id);\r\n    const [commentText, onChangeCommentText] =useInput('');\r\n    const {addCommentDone} = useSelector((state)=> state.post);\r\n\r\n    useEffect(()=>{\r\n      if(addCommentDone){\r\n        setText('');\r\n      }\r\n    },[addCommentDone]);\r\n\r\n    const onSubmitComment = useCallback(()=>{\r\n        console.log(post.id, commentText);\r\n        dispatchEvent({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: {content: commentText, postId:post.id, userId, id}\r\n        });\r\n    },[commentText,id]);\r\n    return(\r\n        <Form onFinish={onSubmitComment}>\r\n         <Form.Item style={{position:'relative', margin:0}}>\r\n             <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n             <Button style={{position:'absolute', right:0, bottom:-40}} type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n         \r\n         </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nCommentForm.propTypes ={\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm"]},"metadata":{},"sourceType":"module"}