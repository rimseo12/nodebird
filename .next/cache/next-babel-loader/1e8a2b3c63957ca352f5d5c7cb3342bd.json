{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  name: 'zerocho',\n  age: 27,\n  password: 'babo'\n};\n\nconst CHANGE_NICKNAME = data => {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data: data\n  };\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_NICKNAME':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/WebProject/react-nodebird/reducers/index.js"],"names":["initialState","name","age","password","CHANGE_NICKNAME","data","type","rootReducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AAClBC,EAAAA,IAAI,EAAE,SADY;AAElBC,EAAAA,GAAG,EAAC,EAFc;AAGlBC,EAAAA,QAAQ,EAAC;AAHS,CAArB;;AAMA,MAAMC,eAAe,GAAIC,IAAD,IAAS;AAC7B,SAAM;AACFC,IAAAA,IAAI,EAAC,iBADH;AAEFD,IAAAA,IAAI,EAAEA;AAFJ,GAAN;AAIH,CALD;;AAQA,MAAME,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAgC;AACjD,UAAOA,MAAM,CAACH,IAAd;AACE,SAAK,iBAAL;AACI,6CACOE,KADP;AAEIP,QAAAA,IAAI,EAACQ,MAAM,CAACJ;AAFhB;AAFN;AAOF,CARD;;AAUA,eAAeE,WAAf","sourcesContent":["const initialState = {\r\n   name: 'zerocho',\r\n   age:27,\r\n   password:'babo',\r\n};\r\n\r\nconst CHANGE_NICKNAME = (data) =>{\r\n    return{\r\n        type:'CHANGE_NICKNAME',\r\n        data: data,\r\n    }\r\n}\r\n\r\n\r\nconst rootReducer = (state = initialState, action)=>{\r\n   switch(action.type){\r\n     case 'CHANGE_NICKNAME':\r\n         return{\r\n             ...state,\r\n             name:action.data,\r\n         }\r\n   }\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}