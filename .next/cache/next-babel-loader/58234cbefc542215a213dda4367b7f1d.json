{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'bombom'\n    },\n    content: '첫 번째 게시글 #해시테그 #익스프레스',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우와 개정판이 나왔군요~'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '얼른 사고싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nvar ADD_POST = 'ADD_POST';\nexport var addPost = {\n  type: ADD_POST\n};\nvar dummyPost = {\n  id: 2,\n  content: '더미데이터입니다.',\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        postAdded: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/WebProject/react-nodebird/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","reducer","state","action"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AAC3BC,EAAAA,SAAS,EAAE,CAAC;AACRC,IAAAA,EAAE,EAAC,CADK;AAERC,IAAAA,IAAI,EAAC;AACHD,MAAAA,EAAE,EAAC,CADA;AAEHE,MAAAA,QAAQ,EAAE;AAFP,KAFG;AAMRC,IAAAA,OAAO,EAAC,uBANA;AAORC,IAAAA,MAAM,EAAE,CAAC;AACRC,MAAAA,GAAG,EAAE;AADG,KAAD,EAEN;AACDA,MAAAA,GAAG,EAAE;AADJ,KAFM,EAIN;AACDA,MAAAA,GAAG,EAAE;AADJ,KAJM,CAPA;AAcPC,IAAAA,QAAQ,EAAE,CAAC;AACTL,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADG;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAD,EAKP;AACDF,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADL;AAIDC,MAAAA,OAAO,EAAE;AAJR,KALO;AAdH,GAAD,CADgB;AA2B3BI,EAAAA,UAAU,EAAE,EA3Be;AA4B3BC,EAAAA,SAAS,EAAE;AA5BgB,CAArB;AA+BP,IAAMC,QAAQ,GAAG,UAAjB;AACA,OAAO,IAAMC,OAAO,GAAE;AAClBC,EAAAA,IAAI,EAAEF;AADY,CAAf;AAIP,IAAMG,SAAS,GAAG;AACdZ,EAAAA,EAAE,EAAE,CADU;AAEdG,EAAAA,OAAO,EAAE,WAFK;AAGdF,EAAAA,IAAI,EAAE;AACJD,IAAAA,EAAE,EAAE,CADA;AAEJE,IAAAA,QAAQ,EAAE;AAFN,GAHQ;AAOdE,EAAAA,MAAM,EAAE,EAPM;AAQdE,EAAAA,QAAQ,EAAE;AARI,CAAlB;;AAWA,IAAMO,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBhB,YAAyB;AAAA,MAAXiB,MAAW;;AAC9C,UAAOA,MAAM,CAACJ,IAAd;AACE,SAAKF,QAAL;AACI,6CACOK,KADP;AAEIf,QAAAA,SAAS,GAAGa,SAAH,4BAAiBE,KAAK,CAACf,SAAvB,EAFb;AAGIS,QAAAA,SAAS,EAAE;AAHf;;AAKJ;AACI,aAAOM,KAAP;AARN;AAUH,CAXD;;AAaA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n mainPosts: [{\r\n     id:1,\r\n     User:{\r\n       id:1,\r\n       nickname: 'bombom',\r\n     },\r\n     content:'첫 번째 게시글 #해시테그 #익스프레스',\r\n     Images: [{\r\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n    }, {\r\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n    }, {\r\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n    }],\r\n      Comments: [{\r\n        User: {\r\n          nickname: 'nero',\r\n        },\r\n        content: '우와 개정판이 나왔군요~',\r\n      }, {\r\n        User: {\r\n          nickname: 'hero',\r\n        },\r\n        content: '얼른 사고싶어요~',\r\n      }]  \r\n }],\r\n imagePaths: [],\r\n postAdded: false,\r\n}\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nexport const addPost ={\r\n    type: ADD_POST,\r\n}\r\n\r\nconst dummyPost = {\r\n    id: 2,\r\n    content: '더미데이터입니다.',\r\n    User: {\r\n      id: 1,\r\n      nickname: '제로초',\r\n    },\r\n    Images: [],\r\n    Comments: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n      case ADD_POST:\r\n          return{\r\n              ...state,\r\n              mainPosts: [dummyPost, ...state.mainPosts],\r\n              postAdded: true,\r\n          };\r\n      default:\r\n          return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}