{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { STOREKEY } from \"next-redux-wrapper\";\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\n\nconst login = data => {\n  return {\n    type: 'LOG_IN',\n    data\n  };\n}; //action creator\n\n\nconst changeNickname = data => {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data: data\n  };\n};\n\nstore.dispatch(changeNickname('mighty tak'));\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_NICKNAME':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/WebProject/react-nodebird/reducers/index.js"],"names":["STOREKEY","initialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","login","data","type","changeNickname","store","dispatch","rootReducer","state","action"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,oBAAzB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAC;AACDC,IAAAA,UAAU,EAAE,KADX;AAEDD,IAAAA,IAAI,EAAE,IAFL;AAGDE,IAAAA,UAAU,EAAC,EAHV;AAIDC,IAAAA,SAAS,EAAC;AAJT,GADe;AAOpBC,EAAAA,IAAI,EAAC;AACDC,IAAAA,SAAS,EAAC;AADT;AAPe,CAArB;;AAYA,MAAMC,KAAK,GAAIC,IAAD,IAAQ;AACnB,SAAM;AACFC,IAAAA,IAAI,EAAC,QADH;AAEFD,IAAAA;AAFE,GAAN;AAIF,CALD,C,CAQA;;;AACA,MAAME,cAAc,GAAIF,IAAD,IAAS;AAC5B,SAAM;AACFC,IAAAA,IAAI,EAAC,iBADH;AAEFD,IAAAA,IAAI,EAAEA;AAFJ,GAAN;AAIH,CALD;;AAOAG,KAAK,CAACC,QAAN,CAAeF,cAAc,CAAC,YAAD,CAA7B;;AAEA,MAAMG,WAAW,GAAG,CAACC,KAAK,GAAGd,YAAT,EAAuBe,MAAvB,KAAgC;AACjD,UAAOA,MAAM,CAACN,IAAd;AACE,SAAK,iBAAL;AACI,6CACOK,KADP;AAEGb,QAAAA,IAAI,kCACAa,KAAK,CAACb,IADN;AAEHC,UAAAA,UAAU,EAAC,IAFR;AAGHD,UAAAA,IAAI,EAACc,MAAM,CAACP;AAHT;AAFP;AAFN;AAWF,CAZD;;AAcA,eAAeK,WAAf","sourcesContent":["import { STOREKEY } from \"next-redux-wrapper\";\r\n\r\nconst initialState = {\r\n user:{\r\n     isLoggedIn: false,\r\n     user: null,\r\n     signUpData:{},\r\n     loginData:{},\r\n },\r\n post:{\r\n     mainPosts:[],\r\n }\r\n};\r\n\r\nconst login = (data)=>{\r\n   return{\r\n       type:'LOG_IN',\r\n       data,\r\n   }\r\n}\r\n\r\n\r\n//action creator\r\nconst changeNickname = (data) =>{\r\n    return{\r\n        type:'CHANGE_NICKNAME',\r\n        data: data,\r\n    }\r\n}\r\n\r\nstore.dispatch(changeNickname('mighty tak'))\r\n\r\nconst rootReducer = (state = initialState, action)=>{\r\n   switch(action.type){\r\n     case 'CHANGE_NICKNAME':\r\n         return{\r\n             ...state,\r\n            user:{\r\n             ...state.user,\r\n             isLoggedIn:true,\r\n             user:action.data,\r\n            },\r\n         }\r\n   }\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}