{"ast":null,"code":"//configureStore.js\nimport { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers/index';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  const store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'boogi'\n  });\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/WebProject/react-nodebird/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","createSagaMiddleware","rootSaga","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","dispatch","type","data","wrapper","debug"],"mappings":"AAAA;AACA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAqD,OAArD;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAoB,UAApB;;AAGA,MAAMC,cAAc,GAAG,MAAK;AACxB,QAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,QAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,QAAQ,GAAG,QACfT,OAAO,CAACD,eAAe,CAAC,GAAGS,WAAJ,CAAhB,CADQ,GAEfN,mBAAmB,CAACH,eAAe,CAAC,GAAGS,WAAJ,CAAhB,CAFrB;AAGAE,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBP,QAAnB,CAAjB;AACA,QAAMK,KAAK,GAAGT,WAAW,CAACE,OAAD,EAAUM,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACG,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAC,iBADM;AAEXC,IAAAA,IAAI,EAAC;AAFM,GAAf;AAIA,SAAOL,KAAP;AACH,CAbD;;AAeA,MAAMM,OAAO,GAAGlB,aAAa,CAACQ,cAAD,EAAgB;AACzCW,EAAAA,KAAK;AADoC,CAAhB,CAA7B;AAKA,eAAeD,OAAf","sourcesContent":["//configureStore.js\r\nimport {createWrapper} from 'next-redux-wrapper';\r\nimport {applyMiddleware, compose, createStore } from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport reducer from '../reducers/index';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from'../sagas';\r\n\r\n\r\nconst configureStore = () =>{\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(applyMiddleware(...middlewares))\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    const store = createStore(reducer, enhancer);\r\n    store.dispatch({\r\n        type:'CHANGE_NICKNAME',\r\n        data:'boogi',\r\n    })\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore,{\r\n    debug: process.env.NODE_ENV === 'development',\r\n    \r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}